---
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import Default from "@layouts/Default.astro";
import { Icon } from "astro-icon/components";
import { SEO } from "astro-seo";

export const prerender = true;

interface Props {
  entry: CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry: { id: any }) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { data } = entry;
const photos = data.images;

function formatDate(date: number | Date) {
  const options = {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
  } as const;
  return new Intl.DateTimeFormat("it-IT", options).format(date);
}

const absoluteImageUrl = new URL(data.heroImage.src, Astro.site).toString();

function isVertical(photo: any) {
  return photo.height > photo.width;
}
---

<Default>
  <SEO
    slot="head"
    openGraph={{
      basic: {
        title: data.title,
        type: "website",
        image: absoluteImageUrl,
      },
      optional: {
        description: data.credit,
      },
      image: {
        alt: data.title,
      },
    }}
  />

  <a href="/projects" class="btn btn-neutral text-xl"><Icon name="material-symbols:arrow-back" /> Altri Progetti</a>
  <div class="flex flex-col items-center justify-center m-4">
    <div class="card bg-base-100 w-4/6 shadow-xl">
      <figure>
        <div class="aspect-video">
          <Image src={data.heroImage} alt={data.title} />
        </div>
      </figure>
      <div class="card-body">
        <h2 class="card-title">
          {data.title}
        </h2>
        <div class="badge badge-secondary">{formatDate(data.pubDate)}</div>
        <p set:html={data.credit} />
        {data.colorCorrection && <p>{data.colorCorrection}</p>}
        {data.editing && <p>{data.editing}</p>}
      </div>
    </div>
  </div>

  <div class="flex flex-col items-center justify-center mt-4">
    <div class="pswp-gallery grid grid-cols-1 min-[355px]:grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 auto-rows-[120px]" id="gallery">
      {
        photos.map((photo: any, index: number) => (
          <a href={photo.src} data-pswp-width={photo.width} data-pswp-height={photo.height} class={`${isVertical(photo) ? "row-span-2" : ""}`}>
            <div class={`block w-44 h-full ${isVertical(photo) ? "h-full" : "aspect-video"}`}>
              <Image src={entry.data.images[index]} alt={entry.data.title} class="rounded-btn object-cover h-full w-full" width="176" />
            </div>
          </a>
        ))
      }
    </div>
  </div>
</Default>

<script>
  import PhotoSwipeLightbox from "photoswipe/lightbox";
  import "photoswipe/style.css";

  const lightbox = new PhotoSwipeLightbox({
    gallery: "#gallery",
    children: "a",
    pswpModule: () => import("photoswipe"),
    wheelToZoom: true,
    pinchToClose: false,
  });

  lightbox.init();
</script>
